@page "/"
@inject NoAuthHttpClient http
@inject IJSRuntime js

@if (sweets is null)
{
    <p>Loading...</p>
}
else if (sweets.Length == 0)
{
<div class="jumbotron jumbotron-fluid">
    <div class="container">
        <h1 class="display-4 text-center">Shop is closed.</h1>
    </div>
</div>
}
else
{
    foreach (var s in sweets)
    {
        <div class="card d-inline-block m-5" style="width: 18rem;">
            <img class="card-img-top" src="/sweet/@s.ImageFileName" alt="@s.Name">
            <div class="card-body">
                <h5 class="card-title">@s.Name - @s.Price.ToString("0.00") €</h5>
                <p class="card-text text-right">@s.Quantity left</p>
                <a href="#" class="btn btn-primary">Buy</a>
                <a href="#" class="btn btn-outline-primary" @onclick='_ => js.InvokeVoidAsync("openRecipeModal", s.Id)'>Recipe</a>
            </div>
        </div>
        <div class="modal" tabindex="-1" role="dialog" id="recipeModal@(s.Id)">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@s.Name</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <ul class="list-group">
                            @if (s.Recipe is not null)
                            {
                                foreach (var ri in s.Recipe)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        @ri.Ingredient.Name
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

    }
}


@code{
    Sweet[] sweets;
    protected override async Task OnParametersSetAsync()
    {
        sweets = await http.Client.GetFromJsonAsync<Sweet[]>("sweet/selling");
    }
}
